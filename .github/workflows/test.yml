# Copied from and reduced to minimal example from
# https://github.com/nedbat/coveragepy/blob/8da4a00b8e439b49dd5f207b6e2bc323d8e6c39c/.github/workflows/python-nightly.yml

# Licensed under the Apache License: http://www.apache.org/licenses/LICENSE-2.0
# For details: https://github.com/nedbat/coveragepy/blob/8da4a00b8e439b49dd5f207b6e2bc323d8e6c39c/NOTICE.txt

name: "Tests"

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  tests:
    name: "${{ matrix.python-version }}${{ matrix.nogil && ' nogil' || '' }}"
    runs-on: "ubuntu-22.04"
    # If it doesn't finish in an hour, it's not going to. Don't spin for six
    # hours needlessly.
    timeout-minutes: 60

    env:
        TOX_GH_MAJOR_MINOR: "${{ matrix.python-version }}${{ matrix.nogil && '-t' || '' }}"

    strategy:
      matrix:
        python-version:
          - "3.12-dev"
          - "3.13-dev"
          - "3.14-dev"
          - "pypy-3.10-nightly"
        nogil:
          - false
          - true
        exclude:
          - python-version: "3.12-dev"
            nogil: true
          - python-version: "pypy-3.10-nightly"
            nogil: true
      fail-fast: false

    steps:
      - name: "Check out the repo"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: "Install ${{ matrix.python-version }} with deadsnakes"
        uses: deadsnakes/action@e640ac8743173a67cca4d7d77cd837e514bf98e8 # v3.2.0
        if: "!startsWith(matrix.python-version, 'pypy-')"
        with:
          python-version: "${{ matrix.python-version }}"
          nogil: "${{ matrix.nogil || false }}"

      - name: "Install ${{ matrix.python-version }} with setup-python"
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        if: "startsWith(matrix.python-version, 'pypy-')"
        with:
          python-version: "${{ matrix.python-version }}"

      - name: "Show diagnostic info"
        run: |
          set -xe
          python -VV
          python -m site
          python -m sysconfig
          python -c "import sys; print('GIL:', getattr(sys, '_is_gil_enabled', lambda: True)())"
          env | sort

      - name: "Install dependencies"
        run: |
          python -m pip install -U pip
          python -m pip install -U virtualenv tox tox-gh

      - name: "Show dependencies"
        run: |
          python -m pip freeze | sort
        
      - name: "Run tox"
        run: |
          python -m tox -v -- -rfsEX
